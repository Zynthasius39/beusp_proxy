openapi: 3.0.3
swagger: 2.0
info:
  title: "Baku Engineering University: TMS/PMS - Rest API"
  description:
    Student Portal API for students of Baku Engineering University. Written in Flask-RESTful, acts as middleman. Parses incoming HTML, JSON responses to more friendly format and provides documentation for it. Includes notifying bot and subscription services.
  contact:
    email: super.alekberov+beusp@proton.me
  license:
    name: GPL3
    url: https://www.gnu.org/licenses/gpl-3.0.en.html
  version: 1.0.4
servers:
  - url: /
    description: Production server (uses root server)
  - url: http://localhost:5000/
    description: Offline server (uses demo data)
tags:
  - name: Authorization
    description: |
      Generate and set session cookies to use service.
      Logging out logs out all session cookies generated on
      the server automatically.
  - name: Operations
    description: |
      Root server operations to change behaviour of student portal.
  - name: Resource
    description: |
      Returns parsed data as JSON.
  - name: Bot
    description: |
      A user cannot subscribe to same service multiple times.
      However same service target can be used by multiple students.
      E.g. Group of students can subscribe to same discord webhook to get notified.
components:
  schemas:
    AttendanceEntry:
      type: object
      required:
        - datetime
        - place
        - present
      properties:
        datetime:
          type: string
          example: 20-02T11:10
        place:
          type: integer
          example: 238
        present:
          type: boolean
          example: true
    CourseAttendanceDetailed:
      type: object
      required:
        - courseCode
        - courseName
        - entries
      properties:
        courseCode:
          type: string
          example: IT254
        courseName:
          type: string
          example: Data structure and algorithms
        entries:
          type: array
          items:
            $ref: "#/components/schemas/AttendanceEntry"
    CourseAttendance:
      type: object
      required:
        - absent
        - absentPercent
        - atds
        - courseEducator
        - courseName
        - credit
        - hours
        - limit
      properties:
        absent:
          type: integer
          example: 1
        absentPercent:
          type: integer
          example: 7
        atds:
          type: integer
          example: 13
        courseEducator:
          type: string
          example: John Doe
        courseName:
          type: string
          example: Principles of Entrepreneurship and Introduction to Business
        credit:
          type: string
          example: 1+1+0
        hours:
          type: integer
          example: 15
        limit:
          type: number
          format: float
          example: 3.75
    Department:
      type: object
      required:
        - depCode
        - depName
        - depPrefixes
      properties:
        depCode:
          type: string
          example: DEP_IT_PROG
        depName:
          type: string
          example: Information technologies and programming
        depPrefixes:
          type: array
          items:
            type: string
            example: IT
      deprecated: true
    DepartmentPrograms:
      type: object
      required:
        - faculty
        - lang
        - progCode
        - progName
        - year
      properties:
        faculty:
          type: string
          example: Faculty of Computer and Information Technologies
        lang:
          type: string
          example: az
        progCode:
          type: integer
          example: 10106
        progName:
          type: string
          example: Information Technologies (Bachelor)
        year:
          type: integer
          example: 2022
    HomeTable:
      type: object
      required:
        - documents
        - image
        - lang
        - studentInfo
      properties:
        documents:
          type: object
          additionalProperties:
            type: string
          example:
            BoringDocument1: documents/boring_document.pdf
            BoringDocument2: another_boring_doc.docx
        image:
          type: string
          example: 290bfdbca904e59e4566ca862be9bf50
        lang:
          type: string
          example: en
        studentInfo:
          type: object
          required:
            - fullNamePatronymic
            - advisor
            - beuEmail
            - birthDate
            - eduDebt
            - dissTopic
            - dormDebt
            - lastLogin
            - presidentScholar
            - speciality
            - groupCode
            - registerDate
            - dimScore
            - stateFunded
            - status
          properties:
            fullNamePatronymic:
              type: string
              example: Sekiro Wolf Owl
            advisor:
              type: string
              example: Ülviyyə Quliyeva
            beuEmail:
              type: string
              example: sekiro@std.beu.edu.az
            birthDate:
              type: string
              example: 2025-01-09
            eduDebt:
              type: object
              required:
                - year
                - semester
                - amount
                - paymentAnnual
                - paymentType
              properties:
                year:
                  type: integer
                  example: 2022
                semester:
                  type: integer
                  example: 1
                amount:
                  type: integer
                  example: 5000
                paymentAnnual:
                  type: integer
                  example: 2500
                paymentType:
                  type: string
                  example: DS
            dissTopic:
              type: string
              example: Why should I be shura?
            dormDebt:
              type: integer
              example: 250
            lastLogin:
              type: object
              required:
                - datetime
                - ip
              properties:
                datetime:
                  type: string
                  example: 2025-02-15T16:50:00
                ip:
                  type: string
                  example: 172.20.1.1
            presidentScholar:
              type: boolean
              example: false
            studentId:
              type: integer
              example: 220106000
            groupCode:
              type: string
              example: 1162i
            registerDate:
              type: string
              example: 2022-07-09
            dimScore:
              type: number
              format: float
              example: 628.6
            stateFunded:
              type: boolean
              example: true
            status:
              type: string
              enum: [studying, graduated] # Add if any missing, PRs accepted
              example: studying
            speciality:
              $ref: "#/components/schemas/speciality"
    FaqItem:
      type: object
      required: [question, answer]
      properties:
        question:
          type: string
          example: Təhsil haqqı borcu nə vaxt ödənilməlidir?
        answer:
          type: string
          example: Yeni qəbul olan tələbə ilk tədris ili üçün illik təhsil haqqını tam həcmdə müqavilə imzalandığı gün ödəyir.
    Message:
      type: object
      required: [date, from, subject, body]
      properties:
        date:
          type: string
          example: 2024-12-12T15:03:00
        from:
          type: string
          example: Leyla Zeynallı-Hüseynzadə
        subject:
          type: string
          example: ATL Seminar
        body:
          type: string
          example: A big ahh message to be ignored
    Course:
      type: object
      required: [courseType, ects, theory, pr]
      properties:
        courseType:
          type: string
          enum: [def, ae, nae, lang]
        ects:
          type: integer
          example: 7
        theory:
          type: integer
          example: 2
        pr:
          type: string
          example: 2+0
        courseCode:
          type: string
          example: IT205
        courseName:
          type: string
          example: Object oriented programming
    CourseRef:
      type: object
      required:
        - newCourseCode
        - newCourseName
        - oldCourseCode
        - oldCourseName
        - year
      properties:
        newCourseCode:
          type: string
          example: COMP304
        newCourseName:
          type: string
          example: Introduction to Artificial Intelligence
        oldCourseCode:
          type: string
          example: 01010803
        oldCourseName:
          type: string
          example: Introduction to Artificial Intelligence
        year:
          type: integer
          example: 2013
    Program:
      type: object
      required:
        - areaCourses
        - nonAreaCourses
        - courses
        - courseRefs
      properties:
        areaCourses:
          type: array
          items:
            $ref: "#/components/schemas/Course"
        nonAreaCourses:
          type: array
          items:
            $ref: "#/components/schemas/Course"
        courses:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/Course"
        courseRefs:
          type: array
          items:
            $ref: "#/components/schemas/CourseRef"
    Announce:
      type: object
      required:
        - body
        - date
        - name
      properties:
        body:
          type: string
          example: A big ahh announcement to be ignored
        date:
          type: string
          example: 2025-01-06T00:00:00
        name:
          type: string
          example: Ders Qeydiyyatı
    TranscriptEntry:
      type: object
      required:
        - courseName
        - credit
        - grade
        - hours
        - gradeLetter
        - repeat
      properties:
        credit:
          type: integer
          example: 3
        grade:
          type: integer
          example: 3
        hours:
          type: integer
          example: 3
        gradeLetter:
          type: string
          enum: ["A", "B", "C", "D", "E", "F", "ip"]
          example: "ip" # In progress
        repeat:
          type: boolean
          example: false # Empty = false
    Transcript:
      type: object
      required:
        - entryDate
        - faculty
        - graduateDate
        - studentId
        - level
        - fullName
        - speciality
        - semesters
        - totalEarnedCredits
        - totalEarnedEcts
        - totalGpa
      properties:
        entryDate:
          type: string
          example: 2022-09-07
        faculty:
          type: string
          example: Faculty of Computer and Information Technologies
        graduateDate:
          type: string
          example: 2026-09-07
        studentId:
          type: integer
          example: 220106000
        level:
          type: string
          example: Bachelor
        fullName:
          type: string
          example: Sekiro Wolf
        speciality:
          $ref: "#/components/schemas/speciality"
        totalEarnedCredits:
          type: integer
          example: 150
        totalEarnedEcts:
          type: integer
          example: 150
        totalGpa:
          type: number
          format: float
          example: 94.54
        semesters:
          type: object
          additionalProperties:
            type: object
            additionalProperties:
              type: object
              properties:
                gpa:
                  type: number
                  format: float
                  example: 93.4
                sac:
                  type: string
                  example: 0t
                spa:
                  type: number
                  format: float
                  example: 94.33
                tacc:
                  type: integer
                  example: 150
                tatc:
                  type: integer
                  example: 150
                totalCredits:
                  type: integer
                  example: 30
                totalHours:
                  type: integer
                  example: 19
                courses:
                  type: object
                  additionalProperties:
                    $ref: "#/components/schemas/TranscriptEntry"
              required:
                - gpa
                - sac
                - spa
                - tacc
                - tatc
                - totalCredits
                - totalHours
                - courses
    Semesters:
      type: object
      required:
        - canRequstAll
        - entries
      properties:
        canRequestAll:
          type: boolean
          example: true
        entries:
          type: array
          items:
            type: object
            required:
              - semester
              - year
            properties:
              semester:
                type: integer
                example: 1
              year:
                type: integer
                example: 2022
    CourseGrade:
      type: object
      properties:
        absents:
          type: integer
          example: 2
        act1:
          type: number
          format: float
          example: 15
        act2:
          type: number
          format: float
          example: 12.6
        additionalFinal:
          type: number
          format: float
          example: -1
        attendance:
          type: number
          example: 10
        courseName:
          type: string
          example: History of Azerbaijan
        ects:
          type: integer
          example: 5
        final:
          type: number
          format: float
          example: 45
        iw:
          type: number
          format: float
          example: 10
        l:
          type: string
          example: ""
        m:
          type: number
          format: float
          example: 40
        n:
          type: number
          format: float
          example: 39
        reFinal:
          type: number
          format: float
          example: -1
        sum:
          type: number
          format: float
          example: 83
        year:
          type: integer
          example: 2022
        semester:
          type: integer
          example: 1
    speciality:
      type: object
      required:
        - program
        - lang
        - year
      properties:
        program:
          type: string
          example: İnformasiya Texnologiyaları
        lang:
          type: string
          example: en
        year:
          type: integer
          example: 2022
